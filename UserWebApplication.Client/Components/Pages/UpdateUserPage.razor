@page "/users/edit/{id:int}"
@rendermode InteractiveServer
@using UserWebApplication.Client.Services
@using UserWebApplication.Core.Entities
@using Microsoft.AspNetCore.Components.Forms

<PageTitle>Изменение пользователя</PageTitle>

<div class="user-form">
    <div class="form-group">
        <label for="name">Имя</label>
        <input id="name" class="form-control" @bind-value="User.Name" />
    </div>

    <div class="form-group">
        <label for="email">Электронная почта</label>
        <input id="email" class="form-control" @bind-value="User.Email" />
    </div>

    <div class="form-group">
        <label for="password">Пароль</label>
        <input id="password" class="form-control" @bind-value="User.Password" />
    </div>

    <button class="btn btn-primary" @onclick="async() => await UpdateUser()">Изменить</button>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    [Inject]
    protected UserService UserService { get; set; } = null!;

    [Inject]
    protected NavigationManager NavigationManager { get; set; } = null!;

    private User User { get; set; } = new User();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            User = await UserService.GetByIdAsync(Id);
            StateHasChanged();
        }
    }

    private async Task UpdateUser()
    {
        await UserService.UpdateAsync(User);
        NavigationManager.NavigateTo("/users");
    }
}
